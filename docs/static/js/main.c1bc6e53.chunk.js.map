{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","components/ui/NavBar.js","data/heroes.js","components/heroes/HeroeCard.js","components/heroes/HeroeList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/heroes/HeroesScreen.js","selectors/getHeroesById.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","name","replace","NavBar","user","useHistory","to","activeClassName","exact","heroes","HeroeCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroeList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","HeroesScreen","heroeId","useParams","heroe","find","length","push","goBack","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLowerCase","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1bc6e53.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login:  '[auth] login',\r\n    logout: '[auth] logout'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={}, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Brigido'\r\n            }\r\n        });\r\n        history.replace( lastPath );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr/>\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { user, dispatch } = useContext( AuthContext );\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () =>{\r\n\r\n        history.replace('/login');\r\n        \r\n        dispatch({\r\n            type: types.logout\r\n        })\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link\">\r\n                        { user.name }\r\n                    </span>\r\n\r\n                    <button\r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroeCard = ({ \r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n }) => {\r\n\r\n    return (\r\n        <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={ `./assets/heroes/${ id }.jpg` } className=\"card-img\" alt={ superhero } />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ superhero }</h5>\r\n                        <p className=\"card-text\">{ alter_ego }</p>\r\n                        {\r\n                            ( alter_ego !== characters ) && <p className=\"card-text\">{ characters }</p>\r\n                        }\r\n                        <p className=\"card-text\"><small className=\"text-muted\">{ first_appearance }</small></p>\r\n                        <Link to={ `./heroe/${ id }` }>\r\n                            Más...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroeCard } from './HeroeCard';\r\n\r\nexport const HeroeList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [ publisher ]);\r\n\r\n    return (\r\n        <div className=\"card-colums animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map( hero => (\r\n                    <HeroeCard \r\n                        key={ hero.id }\r\n                        { ...hero }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if ( !validPublishers.includes( publisher ) ) {\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter( hero => hero.publisher === publisher );\r\n\r\n}","import React from 'react';\r\nimport { HeroeList } from '../heroes/HeroeList';\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n\r\n            <HeroeList publisher=\"Marvel Comics\" />\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroesById } from '../../selectors/getHeroesById';\r\n\r\nexport const HeroesScreen = ({ history }) => {\r\n\r\n    const { heroeId } = useParams();\r\n\r\n    const heroe = useMemo(() => getHeroesById( heroeId), [ heroeId ]);\r\n\r\n    if ( !heroe ) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if ( history.length <= 2 ) {\r\n            history.push('/');\r\n        } else{\r\n        history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        alter_ego,\r\n        first_appearance,\r\n        publisher,\r\n        characters\r\n    } = heroe;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={ `../assets/heroes/${ heroeId }.jpg` }\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                    alt={ superhero }\r\n                />\r\n            </div>\r\n            <div className=\"col-8\">\r\n                <h3>{ superhero }</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b>{ alter_ego }</li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b>{ publisher }</li>\r\n                    <li className=\"list-group-item\"><b>First appearance: </b>{ first_appearance }</li>\r\n                </ul>\r\n                <h5>Characters </h5>\r\n                <p>{ characters }</p>\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }\r\n                >\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesById = ( id ) => {\r\n\r\n    return heroes.find( hero => hero.id === id );\r\n\r\n}","import React from 'react';\r\nimport { HeroeList } from '../heroes/HeroeList';\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n\r\n            <HeroeList publisher=\"DC Comics\" />\r\n        </div>\r\n    )\r\n}","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport { HeroeCard } from '../heroes/HeroeCard';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm( {\r\n        searchText: q\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [ q ]);\r\n\r\n    const handleSearch= (e) => {\r\n        e.preventDefault();\r\n        history.push( `?q=${ searchText }` );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n                    <form onSubmit={ handleSearch }>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find a heroe...\"\r\n                            className=\"form-control\"\r\n                            autoComplete=\"off\"\r\n                            name=\"searchText\"\r\n                            value={ searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr/>\r\n\r\n                    {\r\n                        (q === '' )\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                            Search a heroe...\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0 )\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            There is no a heroe with { q }\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroeCard\r\n                                key={ hero.id }\r\n                                { ...hero }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ]; \r\n\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = ( name ) => {\r\n\r\n    if ( name === '' ) {\r\n        return [];\r\n    }\r\n    \r\n    name = name.toLowerCase();\r\n    return heroes.filter( hero => hero.superhero.toLowerCase().includes( name ));\r\n\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { NavBar } from '../components/ui/NavBar';\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { HeroesScreen } from '../components/heroes/HeroesScreen';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <NavBar/>\r\n\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n                    <Route exact path=\"/heroe/:heroeId\" component={ HeroesScreen } />\r\n\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\nlocalStorage.setItem( 'lastPath', rest.location.pathname );\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n\r\n                <Switch>\r\n                    \r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        isAuthenticated={ user.logged }\r\n                        component={ LoginScreen } \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        isAuthenticated={ user.logged }\r\n                        component={ DashboardRoutes } \r\n                    />\r\n                        \r\n\r\n                </Switch>\r\n\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [ user, dispatch ] = useReducer(authReducer, {}, init);\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem( 'user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return (\r\n    \r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n        \r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}